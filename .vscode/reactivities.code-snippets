{
	"Seed data": {
		"prefix": "S_3.3",
		"body": [
		  "new Visit",
		  "{",
		  "    Title = \"Past Visit 1\",",
		  "    Date = DateTime.Now.AddMonths(-2),",
		  "    Description = \"Visit 2 months ago\",",
		  "    Category = \"drinks\",",
		  "    DoctorId = \"1\",",
		  "    PatientId = \"1\",",
		  "},",
		  "new Visit",
		  "{",
		  "    Title = \"Past Visit 2\",",
		  "    Date = DateTime.Now.AddMonths(-1),",
		  "    Description = \"Visit 1 month ago\",",
		  "    Category = \"culture\",",
		  "    DoctorId = \"1\",",
		  "    PatientId = \"1\",",
		  "},",
		  "new Visit",
		  "{",
		  "    Title = \"Future Visit 1\",",
		  "    Date = DateTime.Now.AddMonths(1),",
		  "    Description = \"Visit 1 month in future\",",
		  "    Category = \"culture\",",
		  "    DoctorId = \"1\",",
		  "    PatientId = \"2\",",
		  "},",
		  "new Visit",
		  "{",
		  "    Title = \"Future Visit 2\",",
		  "    Date = DateTime.Now.AddMonths(2),",
		  "    Description = \"Visit 2 months in future\",",
		  "    Category = \"music\",",
		  "    DoctorId = \"1\",",
		  "    PatientId = \"2\",",
		  "},",
		  "new Visit",
		  "{",
		  "    Title = \"Future Visit 3\",",
		  "    Date = DateTime.Now.AddMonths(3),",
		  "    Description = \"Visit 3 months in future\",",
		  "    Category = \"drinks\",",
		  "    DoctorId = \"1\",",
		  "    PatientId = \"3\",",
		  "},",
		  "new Visit",
		  "{",
		  "    Title = \"Future Visit 4\",",
		  "    Date = DateTime.Now.AddMonths(4),",
		  "    Description = \"Visit 4 months in future\",",
		  "    Category = \"drinks\",",
		  "    DoctorId = \"2\",",
		  "    PatientId = \"3\",",
		  "},",
		  "new Visit",
		  "{",
		  "    Title = \"Future Visit 5\",",
		  "    Date = DateTime.Now.AddMonths(5),",
		  "    Description = \"Visit 5 months in future\",",
		  "    Category = \"drinks\",",
		  "    DoctorId = \"2\",",
		  "    PatientId = \"4\",",
		  "},",
		  "new Visit",
		  "{",
		  "    Title = \"Future Visit 6\",",
		  "    Date = DateTime.Now.AddMonths(6),",
		  "    Description = \"Visit 6 months in future\",",
		  "    Category = \"music\",",
		  "    DoctorId = \"2\",",
		  "    PatientId = \"4\",",
		  "},",
		  "new Visit",
		  "{",
		  "    Title = \"Future Visit 7\",",
		  "    Date = DateTime.Now.AddMonths(7),",
		  "    Description = \"Visit 2 months ago\",",
		  "    Category = \"travel\",",
		  "    DoctorId = \"2\",",
		  "    PatientId = \"5\",",
		  "},",
		  "new Visit",
		  "{",
		  "    Title = \"Future Visit 8\",",
		  "    Date = DateTime.Now.AddMonths(8),",
		  "    Description = \"Visit 8 months in future\",",
		  "    Category = \"film\",",
		  "    DoctorId = \"2\",",
		  "    PatientId = \"5\",",
		  "}"
		],
		"description": "Seed data"
	  },
	  "NavBar CSS": {
		"prefix": "S_5.6",
		"body": [
		  "body {",
		  "  background-color: rgb(234, 234, 234) !important;",
		  "}",
		  "",
		  ".ui.inverted.top.fixed.menu {",
		  "  background-image: linear-gradient(",
		  "    135deg,",
		  "    rgb(24, 42, 115) 0%,",
		  "    rgb(33, 138, 174) 69%,",
		  "    rgb(32, 167, 172) 89%",
		  "  ) !important;",
		  "}"
		],
		"description": "NavBar CSS"
	  },
	  "VisitDetailedHeader": {
		"prefix": "S_9.6.1",
		"body": [
		  "    <Segment.Group>",
		  "      <Segment basic attached='top' style={{ padding: '0' }}>",
		  "        <Image src={`/assets/placeholder.png`} fluid />",
		  "        <Segment>",
		  "          <Item.Group>",
		  "            <Item>",
		  "              <Item.Content>",
		  "                <Header",
		  "                  size='huge'",
		  "                  content={'Title'}",
		  "                  style={{ color: 'white' }}",
		  "                />",
		  "                <p>Date</p>",
		  "                <p>",
		  "                  Hosted by <strong>Bob</strong>",
		  "                </p>",
		  "              </Item.Content>",
		  "            </Item>",
		  "          </Item.Group>",
		  "        </Segment>",
		  "      </Segment>",
		  "      <Segment clearing attached='bottom'>",
		  "        <Button color='teal'>Join Visit</Button>",
		  "        <Button>Cancel attendance</Button>",
		  "        <Button color='orange' floated='right'>",
		  "          Manage Event",
		  "        </Button>",
		  "      </Segment>",
		  "    </Segment.Group>"
		],
		"description": "VisitDetailedHeader"
	  },
	  "VisitDetailedHeader Styles": {
		"prefix": "S_9.6.2",
		"body": [
		  "const visitImageStyle = {",
		  "  filter: 'brightness(30%)'",
		  "};",
		  "",
		  "const visitImageTextStyle = {",
		  "  position: 'absolute',",
		  "  bottom: '5%',",
		  "  left: '5%',",
		  "  width: '100%',",
		  "  height: 'auto',",
		  "  color: 'white'",
		  "};"
		],
		"description": "VisitDetailedHeader Styles"
	  },
	  "VisitDetailedInfo": {
		"prefix": "S_9.7.1",
		"body": [
		  "<Segment.Group>",
		  "      <Segment attached='top'>",
		  "        <Grid>",
		  "          <Grid.Column width={1}>",
		  "            <Icon size='large' color='teal' name='info' />",
		  "          </Grid.Column>",
		  "          <Grid.Column width={15}>",
		  "            <p>{'description'}</p>",
		  "          </Grid.Column>",
		  "        </Grid>",
		  "      </Segment>",
		  "      <Segment attached>",
		  "        <Grid verticalAlign='middle'>",
		  "          <Grid.Column width={1}>",
		  "            <Icon name='calendar' size='large' color='teal' />",
		  "          </Grid.Column>",
		  "          <Grid.Column width={15}>",
		  "            <span>",
		  "              {'date'}",
		  "            </span>",
		  "          </Grid.Column>",
		  "        </Grid>",
		  "      </Segment>",
		  "      <Segment attached>",
		  "        <Grid verticalAlign='middle'>",
		  "          <Grid.Column width={1}>",
		  "            <Icon name='marker' size='large' color='teal' />",
		  "          </Grid.Column>",
		  "          <Grid.Column width={11}>",
		  "            <span>{'patientId'}, {'doctorId'}</span>",
		  "          </Grid.Column>",
		  "        </Grid>",
		  "      </Segment>",
		  "    </Segment.Group>"
		],
		"description": "VisitDetailedInfo"
	  },
	  "VisitDetailedChat": {
		"prefix": "S_9.8.1",
		"body": [
		  "    <Fragment>",
		  "      <Segment",
		  "        textAlign='center'",
		  "        attached='top'",
		  "        inverted",
		  "        color='teal'",
		  "        style={{ border: 'none' }}",
		  "      >",
		  "        <Header>Chat about this event</Header>",
		  "      </Segment>",
		  "      <Segment attached>",
		  "        <Comment.Group>",
		  "          <Comment>",
		  "            <Comment.Avatar src='/assets/user.png' />",
		  "            <Comment.Content>",
		  "              <Comment.Author as='a'>Matt</Comment.Author>",
		  "              <Comment.Metadata>",
		  "                <div>Today at 5:42PM</div>",
		  "              </Comment.Metadata>",
		  "              <Comment.Text>How artistic!</Comment.Text>",
		  "              <Comment.Actions>",
		  "                <Comment.Action>Reply</Comment.Action>",
		  "              </Comment.Actions>",
		  "            </Comment.Content>",
		  "          </Comment>",
		  "",
		  "          <Comment>",
		  "            <Comment.Avatar src='/assets/user.png' />",
		  "            <Comment.Content>",
		  "              <Comment.Author as='a'>Joe Henderson</Comment.Author>",
		  "              <Comment.Metadata>",
		  "                <div>5 days ago</div>",
		  "              </Comment.Metadata>",
		  "              <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>",
		  "              <Comment.Actions>",
		  "                <Comment.Action>Reply</Comment.Action>",
		  "              </Comment.Actions>",
		  "            </Comment.Content>",
		  "          </Comment>",
		  "",
		  "          <Form reply>",
		  "            <Form.TextArea />",
		  "            <Button",
		  "              content='Add Reply'",
		  "              labelPosition='left'",
		  "              icon='edit'",
		  "              primary",
		  "            />",
		  "          </Form>",
		  "        </Comment.Group>",
		  "      </Segment>",
		  "    </Fragment>"
		],
		"description": "VisitDetailedChat"
	  },
	  "VisitDetailedSidebar": {
		"prefix": "S_9.9.1",
		"body": [
		  "    <Fragment>",
		  "      <Segment",
		  "        textAlign='center'",
		  "        style={{ border: 'none' }}",
		  "        attached='top'",
		  "        secondary",
		  "        inverted",
		  "        color='teal'",
		  "      >",
		  "        3 People Going",
		  "      </Segment>",
		  "      <Segment attached>",
		  "        <List relaxed divided>",
		  "          <Item style={{ position: 'relative' }}>",
		  "            <Label",
		  "              style={{ position: 'absolute' }}",
		  "              color='orange'",
		  "              ribbon='right'",
		  "            >",
		  "              Host",
		  "            </Label>",
		  "            <Image size='tiny' src={'/assets/user.png'} />",
		  "            <Item.Content verticalAlign='middle'>",
		  "              <Item.Header as='h3'>",
		  "                <Link to={`#`}>Bob</Link>",
		  "              </Item.Header>",
		  "              <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>",
		  "            </Item.Content>",
		  "          </Item>",
		  "",
		  "          <Item style={{ position: 'relative' }}>",
		  "            <Image size='tiny' src={'/assets/user.png'} />",
		  "            <Item.Content verticalAlign='middle'>",
		  "              <Item.Header as='h3'>",
		  "                <Link to={`#`}>Tom</Link>",
		  "              </Item.Header>",
		  "              <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>",
		  "            </Item.Content>",
		  "          </Item>",
		  "",
		  "          <Item style={{ position: 'relative' }}>",
		  "            <Image size='tiny' src={'/assets/user.png'} />",
		  "            <Item.Content verticalAlign='middle'>",
		  "              <Item.Header as='h3'>",
		  "                <Link to={`#`}>Sally</Link>",
		  "              </Item.Header>",
		  "            </Item.Content>",
		  "          </Item>",
		  "        </List>",
		  "      </Segment>",
		  "    </Fragment>"
		],
		"description": "VisitDetailedSidebar"
	  },
	  "HomePage": {
		"prefix": "S_9.12.1",
		"body": [
		  "    <Segment inverted textAlign='center' vertical className='masthead' >",
		  "        <Container text>",
		  "            <Header as='h1' inverted>",
		  "                <Image size='massive' src='/assets/logo.png' alt='logo' style={{marginBottom: 12}}/>",
		  "                SIOWTM",
		  "            </Header>",
		  "            <Header as='h2' inverted content='Welcome to SIOWTM' />",
		  "            <Button as={Link} to='/visits' size='huge' inverted>",
		  "                Take me to the visits!",
		  "            </Button>",
		  "        </Container>",
		  "    </Segment>"
		],
		"description": "HomePage"
	  },
	  "HomePage styles": {
		"prefix": "S_9.12.2",
		"body": [
		  "/*home page styles*/",
		  "",
		  ".masthead {",
		  "  display: flex;",
		  "  align-items: center;",
		  "  background-image: linear-gradient(",
		  "          135deg,",
		  "          rgb(24, 42, 115) 0%,",
		  "          rgb(33, 138, 174) 69%,",
		  "          rgb(32, 167, 172) 89%",
		  "  ) !important;",
		  "  height: 100vh;",
		  "}",
		  "",
		  ".masthead .ui.menu .ui.button,",
		  ".ui.menu a.ui.inverted.button {",
		  "  margin-left: 0.5em;",
		  "}",
		  "",
		  ".masthead h1.ui.header {",
		  "  font-size: 4em;",
		  "  font-weight: normal;",
		  "}",
		  "",
		  ".masthead h2 {",
		  "  font-size: 1.7em;",
		  "  font-weight: normal;",
		  "}",
		  "",
		  "/*end home page styles*/"
		],
		"description": "HomePage styles"
	  },
	  "NotFound": {
		"prefix": "S_10.9.1",
		"body": [
		  "import React from 'react';",
		  "import { Segment, Button, Header, Icon } from 'semantic-ui-react';",
		  "import { Link } from 'react-router-dom';",
		  "",
		  "const NotFound = () => {",
		  "    return (",
		  "        <Segment placeholder>",
		  "            <Header icon>",
		  "                <Icon name='search' />",
		  "                Oops - we've looked everywhere but couldn't find this.",
		  "            </Header>",
		  "            <Segment.Inline>",
		  "                <Button as={Link} to='/visits' primary>",
		  "                    Return to Visits page",
		  "                </Button>",
		  "            </Segment.Inline>",
		  "        </Segment>",
		  "    );",
		  "};",
		  "",
		  "export default NotFound;"
		],
		"description": "NotFound"
	  },
	  "CategoryOptions": {
		"prefix": "S_11.7.1",
		"body": [
		  "export const Category = [",
		  "  { key: 'drinks', text: 'Drinks', value: 'drinks' },",
		  "  { key: 'culture', text: 'Culture', value: 'culture' },",
		  "  { key: 'film', text: 'Film', value: 'film' },",
		  "  { key: 'food', text: 'Food', value: 'food' },",
		  "  { key: 'music', text: 'Music', value: 'music' },",
		  "  { key: 'travel', text: 'Travel', value: 'travel' }",
		  "];"
		],
		"description": "CategoryOptions"
	  },
	  "NavBar Logged in menu": {
		"prefix": "S_13.6.1",
		"body": [
		  "        <Menu.Item position='right'>",
		  "          <Image avatar spaced='right' src={'/assets/user.png'} />",
		  "          <Dropdown pointing='top left' text='user'>",
		  "            <Dropdown.Menu>",
		  "              <Dropdown.Item as={Link} to={`/profile/username`} text='My profile' icon='user'/>",
		  "              <Dropdown.Item onClick={logout} text='Logout' icon='power' />",
		  "            </Dropdown.Menu>",
		  "          </Dropdown>",
		  "        </Menu.Item>"
		],
		"description": "NavBar Logged in menu"
	  },
	  "Seed data with attendees": {
		"prefix": "S_14.10.1",
		"body": [
		  "using System;",
		  "using System.Collections.Generic;",
		  "using System.Linq;",
		  "using System.Threading.Tasks;",
		  "using Domain;",
		  "using Microsoft.AspNetCore.Identity;",
		  "",
		  "namespace Persistence",
		  "{",
		  "    public class Seed",
		  "    {",
		  "        public static async Task SeedData(DataContext context,",
		  "            UserManager<AppUser> userManager)",
		  "        {",
		  "            if (!userManager.Users.Any())",
		  "            {",
		  "                var users = new List<AppUser>",
		  "                {",
		  "                    new AppUser",
		  "                    {",
		  "                        Id = \"a\",",
		  "                        DisplayName = \"Bob\",",
		  "                        UserName = \"bob\",",
		  "                        Email = \"bob@test.com\"",
		  "                    },",
		  "                    new AppUser",
		  "                    {",
		  "                        Id = \"b\",",
		  "                        DisplayName = \"Jane\",",
		  "                        UserName = \"jane\",",
		  "                        Email = \"jane@test.com\"",
		  "                    },",
		  "                    new AppUser",
		  "                    {",
		  "                        Id = \"c\",",
		  "                        DisplayName = \"Tom\",",
		  "                        UserName = \"tom\",",
		  "                        Email = \"tom@test.com\"",
		  "                    },",
		  "                };",
		  "",
		  "                foreach (var user in users)",
		  "                {",
		  "                    await userManager.CreateAsync(user, \"Pa$$$w0rd\");",
		  "                }",
		  "            }",
		  "",
		  "            if (!context.Visits.Any())",
		  "            {",
		  "                var visits = new List<Visit>",
		  "                {",
		  "                    new Visit",
		  "                    {",
		  "                        Title = \"Past Visit 1\",",
		  "                        Date = DateTime.Now.AddMonths(-2),",
		  "                        Description = \"Visit 2 months ago\",",
		  "                        Category = \"kardiolog\",",
		  "                        DoctorId = \"1\",",
		  "                        PatientId = \"1\",",
		  "                        UserVisits = new List<UserVisit>",
		  "                        {",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"a\",",
		  "                                IsHost = true,",
		  "                                DateJoined = DateTime.Now.AddMonths(-2)",
		  "                            }",
		  "                        }",
		  "                    },",
		  "                    new Visit",
		  "                    {",
		  "                        Title = \"Past Visit 2\",",
		  "                        Date = DateTime.Now.AddMonths(-1),",
		  "                        Description = \"Visit 1 month ago\",",
		  "                        Category = \"kardiolog\",",
		  "                        DoctorId = \"1\",",
		  "                        PatientId = \"1\",",
		  "                        UserVisits = new List<UserVisit>",
		  "                        {",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"b\",",
		  "                                IsHost = true,",
		  "                                DateJoined = DateTime.Now.AddMonths(-1)",
		  "                            },",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"a\",",
		  "                                IsHost = false,",
		  "                                DateJoined = DateTime.Now.AddMonths(-1)",
		  "                            },",
		  "                        }",
		  "                    },",
		  "                    new Visit",
		  "                    {",
		  "                        Title = \"Future Visit 1\",",
		  "                        Date = DateTime.Now.AddMonths(1),",
		  "                        Description = \"Visit 1 month in future\",",
		  "                        Category = \"kardiolog\",",
		  "                        DoctorId = \"1\",",
		  "                        PatientId = \"2\",",
		  "                        UserVisits = new List<UserVisit>",
		  "                        {",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"b\",",
		  "                                IsHost = true,",
		  "                                DateJoined = DateTime.Now.AddMonths(1)",
		  "                            },",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"a\",",
		  "                                IsHost = false,",
		  "                                DateJoined = DateTime.Now.AddMonths(1)",
		  "                            },",
		  "                        }",
		  "                    },",
		  "                    new Visit",
		  "                    {",
		  "                        Title = \"Future Visit 2\",",
		  "                        Date = DateTime.Now.AddMonths(2),",
		  "                        Description = \"Visit 2 months in future\",",
		  "                        Category = \"kardiolog\",",
		  "                        DoctorId = \"1\",",
		  "                        PatientId = \"2\",",
		  "                        UserVisits = new List<UserVisit>",
		  "                        {",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"c\",",
		  "                                IsHost = true,",
		  "                                DateJoined = DateTime.Now.AddMonths(2)",
		  "                            },",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"a\",",
		  "                                IsHost = false,",
		  "                                DateJoined = DateTime.Now.AddMonths(2)",
		  "                            },",
		  "                        }",
		  "                    },",
		  "                    new Visit",
		  "                    {",
		  "                        Title = \"Future Visit 3\",",
		  "                        Date = DateTime.Now.AddMonths(3),",
		  "                        Description = \"Visit 3 months in future\",",
		  "                        Category = \"kardiolog\",",
		  "                        DoctorId = \"1\",",
		  "                        PatientId = \"3\",",
		  "                        UserVisits = new List<UserVisit>",
		  "                        {",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"b\",",
		  "                                IsHost = true,",
		  "                                DateJoined = DateTime.Now.AddMonths(3)",
		  "                            },",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"c\",",
		  "                                IsHost = false,",
		  "                                DateJoined = DateTime.Now.AddMonths(3)",
		  "                            },",
		  "                        }",
		  "                    },",
		  "                    new Visit",
		  "                    {",
		  "                        Title = \"Future Visit 4\",",
		  "                        Date = DateTime.Now.AddMonths(4),",
		  "                        Description = \"Visit 4 months in future\",",
		  "                        Category = \"dentysta\",",
		  "                        DoctorId = \"2\",",
		  "                        PatientId = \"3\",",
		  "                        UserVisits = new List<UserVisit>",
		  "                        {",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"a\",",
		  "                                IsHost = true,",
		  "                                DateJoined = DateTime.Now.AddMonths(4)",
		  "                            }",
		  "                        }",
		  "                    },",
		  "                    new Visit",
		  "                    {",
		  "                        Title = \"Future Visit 5\",",
		  "                        Date = DateTime.Now.AddMonths(5),",
		  "                        Description = \"Visit 5 months in future\",",
		  "                        Category = \"dentysta\",",
		  "                        DoctorId = \"2\",",
		  "                        PatientId = \"4\",",
		  "                        UserVisits = new List<UserVisit>",
		  "                        {",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"c\",",
		  "                                IsHost = true,",
		  "                                DateJoined = DateTime.Now.AddMonths(5)",
		  "                            },",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"b\",",
		  "                                IsHost = false,",
		  "                                DateJoined = DateTime.Now.AddMonths(5)",
		  "                            },",
		  "                        }",
		  "                    },",
		  "                    new Visit",
		  "                    {",
		  "                        Title = \"Future Visit 6\",",
		  "                        Date = DateTime.Now.AddMonths(6),",
		  "                        Description = \"Visit 6 months in future\",",
		  "                        Category = \"dentysta\",",
		  "                        DoctorId = \"2\",",
		  "                        PatientId = \"4\",",
		  "                        UserVisits = new List<UserVisit>",
		  "                        {",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"a\",",
		  "                                IsHost = true,",
		  "                                DateJoined = DateTime.Now.AddMonths(6)",
		  "                            },",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"b\",",
		  "                                IsHost = false,",
		  "                                DateJoined = DateTime.Now.AddMonths(6)",
		  "                            },",
		  "                        }",
		  "                    },",
		  "                    new Visit",
		  "                    {",
		  "                        Title = \"Future Visit 7\",",
		  "                        Date = DateTime.Now.AddMonths(7),",
		  "                        Description = \"Visit 7 months in future\",",
		  "                        Category = \"dentysta\",",
		  "                        DoctorId = \"2\",",
		  "                        PatientId = \"5\",",
		  "                        UserVisits = new List<UserVisit>",
		  "                        {",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"a\",",
		  "                                IsHost = true,",
		  "                                DateJoined = DateTime.Now.AddMonths(7)",
		  "                            },",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"c\",",
		  "                                IsHost = false,",
		  "                                DateJoined = DateTime.Now.AddMonths(7)",
		  "                            },",
		  "                        }",
		  "                    },",
		  "                    new Visit",
		  "                    {",
		  "                        Title = \"Future Visit 8\",",
		  "                        Date = DateTime.Now.AddMonths(8),",
		  "                        Description = \"Visit 8 months in future\",",
		  "                        Category = \"dentysta\",",
		  "                        DoctorId = \"2\",",
		  "                        PatientId = \"5\",",
		  "                        UserVisits = new List<UserVisit>",
		  "                        {",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"b\",",
		  "                                IsHost = true,",
		  "                                DateJoined = DateTime.Now.AddMonths(8)",
		  "                            },",
		  "                            new UserVisit",
		  "                            {",
		  "                                AppUserId = \"a\",",
		  "                                IsHost = false,",
		  "                                DateJoined = DateTime.Now.AddMonths(8)",
		  "                            },",
		  "                        }",
		  "                    }",
		  "                };",
		  "",
		  "                await context.Visits.AddRangeAsync(visits);",
		  "                await context.SaveChangesAsync();",
		  "            }",
		  "        }",
		  "    }",
		  "}"
		],
		"description": "Seed data with attendees"
	  },
	  "ProfileHeader": {
		"prefix": "S_17.4.1",
		"body": [
		  "import React from 'react';",
		  "import { Segment, Item, Header, Button, Grid, Statistic, Divider, Reveal } from 'semantic-ui-react';",
		  "",
		  "const ProfileHeader = () => {",
		  "  return (",
		  "    <Segment>",
		  "      <Grid>",
		  "        <Grid.Column width={12}>",
		  "          <Item.Group>",
		  "            <Item>",
		  "              <Item.Image",
		  "                avatar",
		  "                size='small'",
		  "                src={'/assets/user.png'}",
		  "              />",
		  "              <Item.Content verticalAlign='middle'>",
		  "                <Header as='h1'>DisplayName</Header>",
		  "              </Item.Content>",
		  "            </Item>",
		  "          </Item.Group>",
		  "        </Grid.Column>",
		  "        <Grid.Column width={4}>",
		  "          <Statistic.Group widths={2}>",
		  "            <Statistic label='Followers' value='5'/>",
		  "            <Statistic label='Following' value='42'/>",
		  "          </Statistic.Group>",
		  "          <Divider/>",
		  "          <Reveal animated='move'>",
		  "            <Reveal.Content visible style={{ width: '100%' }}>",
		  "              <Button",
		  "                fluid",
		  "                color='teal'",
		  "                content='Following'",
		  "              />",
		  "            </Reveal.Content>",
		  "            <Reveal.Content hidden>",
		  "              <Button",
		  "                fluid",
		  "                basic",
		  "                color={true ? 'red' : 'green'}",
		  "                content={true ? 'Unfollow' : 'Follow'}",
		  "              />",
		  "            </Reveal.Content>",
		  "          </Reveal>",
		  "        </Grid.Column>",
		  "      </Grid>",
		  "    </Segment>",
		  "  );",
		  "};",
		  "",
		  "export default ProfileHeader;",
		  ""
		],
		"description": "ProfileHeader"
	  },
	  "PhotoWidget": {
		"prefix": "S_17.8.1",
		"body": [
		  "import React, { Fragment } from 'react';",
		  "import { Header, Grid } from 'semantic-ui-react';",
		  "import { observer } from 'mobx-react-lite';",
		  "",
		  "export const PhotoUploadWidget = () => (",
		  "  <Fragment>",
		  "    <Grid>",
		  "      <Grid.Row />",
		  "      <Grid.Column width={4}>",
		  "        <Header color='teal' sub content='Step 1 - Add Photo' />",
		  "      </Grid.Column>",
		  "      <Grid.Column width={1} />",
		  "      <Grid.Column width={4}>",
		  "        <Header sub color='teal' content='Step 2 - Resize image' />",
		  "      </Grid.Column>",
		  "      <Grid.Column width={1} />",
		  "      <Grid.Column width={4}>",
		  "        <Header sub color='teal' content='Step 3 - Preview & Upload' />",
		  "      </Grid.Column>",
		  "    </Grid>",
		  "  </Fragment>",
		  ");",
		  "",
		  "export default observer(PhotoUploadWidget);",
		  ""
		],
		"description": "PhotoWidget"
	  },
	  "Profile Followings": {
		"prefix": "S_20.12.1",
		"body": [
		  "import React, { useContext } from 'react';",
		  "import { Tab, Grid, Header, Card } from 'semantic-ui-react';",
		  "import { RootStoreContext } from '../../app/stores/rootStore';",
		  "import ProfileCard from './ProfileCard';",
		  "",
		  "const ProfileFollowings = () => {",
		  "  const rootStore = useContext(RootStoreContext);",
		  "  const { profile } = rootStore.profileStore;",
		  "  return (",
		  "    <Tab.Pane>",
		  "      <Grid>",
		  "        <Grid.Column width={16}>",
		  "          <Header",
		  "            floated='left'",
		  "            icon='user'",
		  "            content={",
		  "              true",
		  "                ? `People following ${profile!.displayName}`",
		  "                : `People ${profile!.displayName} is following`",
		  "            }",
		  "          />",
		  "        </Grid.Column>",
		  "        <Grid.Column width={16}>",
		  "          <Card.Group itemsPerRow={5}>",
		  "            <ProfileCard />",
		  "            <ProfileCard />",
		  "            <ProfileCard />",
		  "            <ProfileCard />",
		  "            <ProfileCard />",
		  "          </Card.Group>",
		  "        </Grid.Column>",
		  "      </Grid>",
		  "    </Tab.Pane>",
		  "  );",
		  "};",
		  "",
		  "export default ProfileFollowings;",
		  ""
		],
		"description": "Profile Followings"
	  },
	  "Profile Card": {
		"prefix": "S_20.12.2",
		"body": [
		  "import React from 'react';",
		  "import { Card, Image, Icon} from 'semantic-ui-react';",
		  "import { Link } from 'react-router-dom';",
		  "",
		  "const ProfileCard: React.FC = () => {",
		  "  return (",
		  "    <Card as={Link} to={`/profile/username`}>",
		  "      <Image src={'/assets/user.png'} />",
		  "      <Card.Content>",
		  "        <Card.Header>{'display name'}</Card.Header>",
		  "      </Card.Content>",
		  "      <Card.Content extra>",
		  "        <div>",
		  "          <Icon name='user' />",
		  "          22 Followers",
		  "        </div>",
		  "      </Card.Content>",
		  "    </Card>",
		  "  );",
		  "};",
		  "",
		  "export default ProfileCard;",
		  ""
		],
		"description": "Profile Card"
	  },
	  "VisitFilters": {
		"prefix": "S_21.4.1",
		"body": [
		  "import React, { Fragment } from 'react';",
		  "import { Menu, Header } from 'semantic-ui-react';",
		  "import { Calendar } from 'react-widgets';",
		  "",
		  "const VisitFilters = () => (",
		  "  <Fragment>",
		  "    <Menu vertical size={'large'} style={{ width: '100%', marginTop: 30 }}>",
		  "      <Header icon={'filter'} attached color={'teal'} content={'Filters'} />",
		  "      <Menu.Item color={'blue'} name={'all'} content={'All Visits'} />",
		  "      <Menu.Item color={'blue'} name={'username'} content={\"I'm Going\"} />",
		  "      <Menu.Item color={'blue'} name={'host'} content={\"I'm hosting\"} />",
		  "    </Menu>",
		  "    <Header icon={'calendar'} attached color={'teal'} content={'Select Date'} />",
		  "    <Calendar />",
		  "  </Fragment>",
		  ");",
		  "",
		  "export default VisitFilters;"
		],
		"description": "VisitFilters"
	},
	"VisitsListHandler": {
		"prefix": "S_21.10.1",
		"body": [
		  "using System;",
		  "using System.Collections.Generic;",
		  "using System.Linq;",
		  "using System.Net;",
		  "using System.Threading;",
		  "using System.Threading.Tasks;",
		  "using Application.Errors;",
		  "using MediatR;",
		  "using Microsoft.EntityFrameworkCore;",
		  "using Persistence;",
		  "",
		  "namespace Application.Profiles",
		  "{",
		  "    public class ListVisits",
		  "    {",
		  "        public class Query : IRequest<List<UserVisitDto>>",
		  "        {",
		  "            public string Username { get; set; }",
		  "            public string Predicate { get; set; }",
		  "        }",
		  "",
		  "        public class Handler : IRequestHandler<Query, List<UserVisitDto>>",
		  "        {",
		  "            private readonly DataContext _context;",
		  "            public Handler(DataContext context)",
		  "            {",
		  "                _context = context;",
		  "            }",
		  "",
		  "            public async Task<List<UserVisitDto>> Handle(Query request,",
		  "                CancellationToken cancellationToken)",
		  "            {",
		  "                var user = await _context.Users.SingleOrDefaultAsync(x => x.UserName == request.Username);",
		  "",
		  "                if (user == null)",
		  "                    throw new RestException(HttpStatusCode.NotFound, new { User = \"Not found\" });",
		  "",
		  "                var queryable = user.UserVisits",
		  "                    .OrderBy(a => a.Visit.Date)",
		  "                    .AsQueryable();",
		  "",
		  "                switch (request.Predicate)",
		  "                {",
		  "                    case \"past\":",
		  "                        queryable = queryable.Where(a => a.Visit.Date <= DateTime.Now);",
		  "                        break;",
		  "                    case \"hosting\":",
		  "                        queryable = queryable.Where(a => a.IsHost);",
		  "                        break;",
		  "                    default:",
		  "                        queryable = queryable.Where(a => a.Visit.Date >= DateTime.Now);",
		  "                        break;",
		  "                }",
		  "",
		  "                var visits = queryable.ToList();",
		  "                var visitsToReturn = new List<UserVisitDto>();",
		  "",
		  "                foreach (var visit in visits)",
		  "                {",
		  "                    var userVisit = new UserVisitDto",
		  "                    {",
		  "                        Id = visit.Visit.Id,",
		  "                        Title = visit.Visit.Title,",
		  "                        Category = visit.Visit.Category,",
		  "                        Date = visit.Visit.Date",
		  "                    };",
		  "",
		  "                    visitsToReturn.Add(userVisit);",
		  "                }",
		  "",
		  "                return visitsToReturn;",
		  "            }",
		  "        }",
		  "    }",
		  "}"
		],
		"description": "VisitsListHandler"
	  },
	  "ProfileVisits": {
		"prefix": "S_21.11.1",
		"body": [
		  "import React, { useEffect, useContext } from 'react';",
		  "import { observer } from 'mobx-react-lite';",
		  "import { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';",
		  "import { Link } from 'react-router-dom';",
		  "import { IUserVisit } from '../../app/models/profile';",
		  "import { format } from 'date-fns';",
		  "import { RootStoreContext } from '../../app/stores/rootStore';",
		  "",
		  "const panes = [",
		  "  { menuItem: 'Future Events', pane: { key: 'futureEvents' } },",
		  "  { menuItem: 'Past Events', pane: { key: 'pastEvents' } },",
		  "  { menuItem: 'Hosting', pane: { key: 'hosted' } }",
		  "];",
		  "",
		  "const ProfileEvents = () => {",
		  "  const rootStore = useContext(RootStoreContext);",
		  "  const {",
		  "    loadUserVisits,",
		  "    profile,",
		  "    loadingVisits,",
		  "    userVisits",
		  "  } = rootStore.profileStore!;",
		  "",
		  "  useEffect(() => {",
		  "    loadUserVisits(profile!.username);",
		  "  }, [loadUserVisits, profile]);",
		  "",
		  "  const handleTabChange = (",
		  "    e: React.MouseEvent<HTMLDivElement, MouseEvent>,",
		  "    data: TabProps",
		  "  ) => {",
		  "    let predicate;",
		  "    switch (data.activeIndex) {",
		  "      case 1:",
		  "        predicate = 'past';",
		  "        break;",
		  "      case 2:",
		  "        predicate = 'hosting';",
		  "        break;",
		  "      default:",
		  "        predicate = 'future';",
		  "        break;",
		  "    }",
		  "    loadUserVisits(profile!.username, predicate);",
		  "  };",
		  "",
		  "  return (",
		  "    <Tab.Pane loading={loadingVisits}>",
		  "      <Grid>",
		  "        <Grid.Column width={16}>",
		  "          <Header floated='left' icon='calendar' content={'Visits'} />",
		  "        </Grid.Column>",
		  "        <Grid.Column width={16}>",
		  "          <Tab",
		  "            panes={panes}",
		  "            menu={{ secondary: true, pointing: true }}",
		  "            onTabChange={(e, data) => handleTabChange(e, data)}",
		  "          />",
		  "          <br />",
		  "          <Card.Group itemsPerRow={4}>",
		  "            {userVisits.map((visit: IUserVisit) => (",
		  "              <Card",
		  "                as={Link}",
		  "                to={`/visits/${visit.id}`}",
		  "                key={visit.id}",
		  "              >",
		  "                <Image",
		  "                  src={`/assets/CategoryImages/${visit.Category}.jpg`}",
		  "                  style={{ minHeight: 100, objectFit: 'cover' }}",
		  "                />",
		  "                <Card.Content>",
		  "                  <Card.Header textAlign='center'>{visit.title}</Card.Header>",
		  "                  <Card.Meta textAlign='center'>",
		  "                    <div>{format(new Date(visit.date), 'do LLL')}</div>",
		  "                    <div>{format(new Date(visit.date), 'h:mm a')}</div>",
		  "                  </Card.Meta>",
		  "                </Card.Content>",
		  "              </Card>",
		  "            ))}",
		  "          </Card.Group>",
		  "        </Grid.Column>",
		  "      </Grid>",
		  "    </Tab.Pane>",
		  "  );",
		  "};",
		  "",
		  "export default observer(ProfileEvents);",
		  ""
		],
		"description": "ProfileVisits"
	  },
	  "VisitListItemPlaceholder": {
		"prefix": "S_22.1.0",
		"body": [
		  "import React, { Fragment } from 'react';",
		  "import { Segment, Button, Placeholder } from 'semantic-ui-react';",
		  "const VisitListItemPlaceholder = () => {",
		  "  return (",
		  "    <Fragment>",
		  "      <Placeholder fluid style={{ marginTop: 50 }}>",
		  "        <Segment.Group>",
		  "          <Segment style={{ minHeight: 110 }}>",
		  "            <Placeholder>",
		  "              <Placeholder.Header image>",
		  "                <Placeholder.Line />",
		  "                <Placeholder.Line />",
		  "              </Placeholder.Header>",
		  "              <Placeholder.Paragraph>",
		  "                <Placeholder.Line />",
		  "              </Placeholder.Paragraph>",
		  "            </Placeholder>",
		  "          </Segment>",
		  "          <Segment>",
		  "            <Placeholder>",
		  "              <Placeholder.Line />",
		  "              <Placeholder.Line />",
		  "            </Placeholder>",
		  "          </Segment>",
		  "          <Segment secondary style={{ minHeight: 70 }} />",
		  "          <Segment clearing>",
		  "            <Button disabled color='blue' floated='right' content='View' />",
		  "          </Segment>",
		  "        </Segment.Group>",
		  "      </Placeholder>",
		  "    </Fragment>",
		  "  );",
		  "};",
		  "export default VisitListItemPlaceholder;"
		],
		"description": "VisitListItemPlaceholder"
	  },
	  "SafariDateFix": {
		"prefix": "S_22.5.1",
		"body": [
		  "export const combineDateAndTime = (date: Date, time: Date) => {",
		  "  const timeString =",
		  "    (time.getHours() < 10 ? '0' + time.getHours() : time.getHours()) +",
		  "    ':' +",
		  "    (time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes()) +",
		  "    ':00';",
		  "",
		  "  const year = date.getFullYear();",
		  "  const month = date.getMonth() + 1;",
		  "  const day = date.getDate();",
		  "  const dateString = `${year}-${month < 10 ? '0' + month : month}-${day}`;",
		  "",
		  "  return new Date(dateString + 'T' + timeString);",
		  "};"
		],
		"description": "SafariDateFix"
	  }
}
